<section class="content">
    <h2>Gestion de Véhicule</h2>
    <div class="vehicle-details">
      <img src="https://images.unsplash.com/photo-1523987355523-c7b5b0dd90a7?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=600&q=80" alt="Camping-car Luxe Horizon" class="vehicle-image">
      <div class="vehicle-info">
        <h3>Camping-car Luxe Horizon</h3>
        <p><strong>Type:</strong> Camping-car</p>
        <p><strong>Capacité:</strong> 4 personnes</p>
        <p><strong>Prix/jour:</strong> 140€</p>
        <p><strong>Description:</strong> Ce camping-car luxueux offre tout le confort nécessaire pour vos aventures. Équipé d'une cuisine complète, d'une salle de bain privée et d'un espace de couchage confortable pour 4 personnes.</p>
        <button class="btn btn-primary">Modifier les informations</button>
      </div>
    </div>
    <div class="calendar">
      <div class="calendar-header">
        <h3>Calendrier de disponibilité</h3>
        <div>
          <button class="btn btn-primary" id="prevMonth">&lt;</button>
          <span id="currentMonth">Juin 2023</span>
          <button class="btn btn-primary" id="nextMonth">&gt;</button>
        </div>
      </div>
      <div class="calendar-grid" id="calendarGrid">
        <!-- Les jours du calendrier seront générés ici par JavaScript -->
      </div>
    </div>
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', (event) => {
      const calendarGrid = document.getElementById('calendarGrid');
      const currentMonthSpan = document.getElementById('currentMonth');
      const prevMonthBtn = document.getElementById('prevMonth');
      const nextMonthBtn = document.getElementById('nextMonth');

      let currentDate = new Date();

      function generateCalendar(year, month) {
        calendarGrid.innerHTML = '';
        const daysInMonth = new Date(year, month + 1, 0).getDate();
        const firstDay = new Date(year, month, 1).getDay();

        currentMonthSpan.textContent = new Date(year, month).toLocaleString('default', { month: 'long', year: 'numeric' });

        // Ajout des en-têtes des jours de la semaine
        const weekdays = ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'];
        weekdays.forEach(day => {
          const dayElement = document.createElement('div');
          dayElement.classList.add('calendar-day');
          dayElement.textContent = day;
          calendarGrid.appendChild(dayElement);
        });

        // Ajout des espaces vides pour les jours avant le premier du mois
        for (let i = 0; i < firstDay; i++) {
          const emptyDay = document.createElement('div');
          calendarGrid.appendChild(emptyDay);
        }

        // Génération des jours du mois
        for (let day = 1; day <= daysInMonth; day++) {
          const dayElement = document.createElement('div');
          dayElement.classList.add('calendar-day');
          dayElement.textContent = day;

          // Simulons des disponibilités aléatoires
          if (Math.random() > 0.5) {
            dayElement.classList.add('available');
          } else {
            dayElement.classList.add('unavailable');
          }

          calendarGrid.appendChild(dayElement);
        }
      }

      generateCalendar(currentDate.getFullYear(), currentDate.getMonth());

      prevMonthBtn.addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() - 1);
        generateCalendar(currentDate.getFullYear(), currentDate.getMonth());
      });

      nextMonthBtn.addEventListener('click', () => {
        currentDate.setMonth(currentDate.getMonth() + 1);
        generateCalendar(currentDate.getFullYear(), currentDate.getMonth());
      });
    });
  </script>